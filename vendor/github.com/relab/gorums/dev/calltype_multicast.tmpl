
{{/* Remember to run 'make goldenanddev' after editing this file. */}}

{{if not .IgnoreImports}}
package {{.PackageName}}

import "golang.org/x/net/context"
{{end}}

{{range $elm := .Services}}

{{if .Multicast}}

// {{.MethodName}} is a one-way multicast call on all nodes in configuration c,
// using the same argument arg. The call is asynchronous and has no return value.
func (c *Configuration) {{.MethodName}}(ctx context.Context, arg *{{.FQReqName}}) error {
	return c.{{.UnexportedMethodName}}(ctx, arg)
}

func (c *Configuration) {{.UnexportedMethodName}}(ctx context.Context, arg *{{.FQReqName}}) error {
	for _, node := range c.nodes {
		go func(n *Node) {
			err := n.{{.MethodName}}Client.Send(arg)
			if err == nil {
				return
			}
			if c.mgr.logger != nil {
				c.mgr.logger.Printf("%d: {{.UnexportedMethodName}} stream send error: %v", n.id, err)
			}
		}(node)
	}

	return nil
}
{{- end -}}
{{- end -}}
