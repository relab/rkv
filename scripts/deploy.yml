- name: Stage instances
  hosts: local
  connection: local
  remote_user: ec2-user
  gather_facts: false

  vars:
      keypair: red
      security_group: UIS
      region: us-east-1
      image: ami-c58c1dd3

  tasks:
    - name: Launch instance
      ec2:
        keypair: "{{keypair}}"
        group: "{{security_group}}"
        region: "{{region}}"
        zone: "{{item.zone}}"
        instance_type: "{{item.instance_type}}"
        image: "{{image}}"
        count: 1
        wait: true
        volumes:
          - device_name: /dev/xvda
            delete_on_termination: true
            volume_type: gp2
            volume_size: 8
          - device_name: /dev/xvdb
            volume_type: ephemeral
            ephemeral: ephemeral0
      register: ec2
      with_items:
        - { zone: us-east-1a, instance_type: r3.xlarge }
        - { zone: us-east-1b, instance_type: r3.xlarge }
        - { zone: us-east-1c, instance_type: r3.xlarge }
        - { zone: us-east-1d, instance_type: r3.xlarge }
        - { zone: us-east-1e, instance_type: r3.xlarge }
        - { zone: us-east-1e, instance_type: r3.2xlarge }

    - name: Add new instances to host group
      add_host: hostname="{{item.instances[0].public_ip}}" groupname=deploy
      with_items: "{{ec2.results}}"

    - name: Wait for the instances to boot by checking the ssh port
      wait_for: host="{{item.instances[0].public_dns_name}}" port=22 delay=10 timeout=320 state=started
      with_items: "{{ec2.results}}"

- name: Configure instances
  hosts: deploy
  remote_user: ec2-user

  tasks:
    - name: Install packages
      become: true
      yum:
        name: "{{item}}"
        state: latest
      with_items:
        - git
        - htop

    - name: Install programs and format SSD
      shell:
        cmd: |
          cd $HOME
          curl -O "https://storage.googleapis.com/golang/go1.8.1.linux-amd64.tar.gz"
          sudo tar -C /usr/local -xzf go1.8.1.linux-amd64.tar.gz
          cat >> .bashrc <<EOF
          export PATH=$PATH:/usr/local/go/bin:~/go/bin
          EOF
          source ~/.bashrc
          go get github.com/s111/rkv
          mv ~/go/src/github.com/s111 ~/go/src/github.com/relab
          go install github.com/relab/rkv/cmd/...
          sudo mkfs.ext4 -E nodiscard /dev/xvdb

    - name: Reboot
      become: true
      shell: sleep 2 && reboot
      async: 1
      poll: 0

- name: Wait for instances to reboot
  hosts: local
  connection: local
  gather_facts: false

  tasks:
    - name: Sleep
      shell: sleep 20s

    - name: Wait for the instances to boot by checking the ssh port
      wait_for: host="{{item}}" port=22 delay=10 timeout=320 state=started
      with_items: "{{groups['deploy']}}"

- name: Allow user to access instances SSDs
  hosts: deploy
  remote_user: ec2-user

  tasks:
    - name: Mount
      become: true
      shell:
        cmd: |
          mkdir -p /media/ephemeral0/tmp /media/ephemeral0/save
          chown -R ec2-user:ec2-user /media/ephemeral0/tmp /media/ephemeral0/save
